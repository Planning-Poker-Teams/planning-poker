name: Build & Deploy

on:
  push:
    branches:
      - production
      - develop
  pull_request:
    branches:
      - develop
    types:
      - opened
      - synchronize
      - reopened
      - closed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        if: github.event.action != 'closed'
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Yarn Install
        if: github.event.action != 'closed'
        run: yarn install --immutable

      - name: Yarn Lint
        if: github.event.action != 'closed'
        run: |
          yarn workspace backend lint
          yarn workspace frontend lint

      - name: Yarn Build
        if: github.event.action != 'closed'
        run: |
          yarn workspace backend build
          yarn workspace frontend build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::054552196453:role/github-oidc-role
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set Environment Name (Push)
        if: github.event_name == 'push'
        env:
          ENVIRONMENT_NAME: ${{ github.event.number }}-${{ github.head_ref }}
        run: |
          echo "ENVIRONMENT_NAME=$ENVIRONMENT_NAME" >> $GITHUB_ENV

      - name: Set Environment Name (Pull Request)
        if: github.event_name == 'pull_request'
        env:
          ENVIRONMENT_NAME: ${{ github.event.number }}-${{ github.head_ref }}
        run: |
          echo "ENVIRONMENT_NAME=$ENVIRONMENT_NAME" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: 'infrastructure'
        run: |
          terraform init \
            -backend-config="region=eu-central-1" \
            -backend-config="bucket=planning-poker-terraform-state" \
            -backend-config="dynamodb_table=planning-poker-terraform-state-locks" \
            -backend-config="key=${ENVIRONMENT_NAME}.tfstate"

      - name: Terraform Lint
        if: github.event.action != 'closed'
        working-directory: 'infrastructure'
        run: |
          terraform fmt -check

      - name: Terraform Plan
        if: github.event.action != 'closed'
        working-directory: 'infrastructure'
        run: |
          terraform plan \
            -var environment="${ENVIRONMENT_NAME}" \
            -out=plan.tfout

      - name: Terraform Apply
        if: github.event.action != 'closed'
        working-directory: 'infrastructure'
        run: |
          terraform apply \
            -auto-approve \
            plan.tfout

      - name: Create or Update Deployment comment
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Pull Request is deployed at <https://planning-poker-${ENVIRONMENT_NAME}-frontend.s3-website.eu-central-1.amazonaws.com>

      - name: Terraform Destroy
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        working-directory: 'infrastructure'
        run: |
          # Workaround: Terraform checks if the files are there, but does not use them.
          mkdir ../packages/backend/dist
          touch ../packages/backend/dist/handleWebsocketEvents.js
          terraform destroy \
            -var environment="${ENVIRONMENT_NAME}" \
            -auto-approve
